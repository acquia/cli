#!/usr/bin/env php
<?php

/**
 * @file
 * Acquia CLI command line front file.
 *
 * This is largely based on the default bin/console command that ships with a
 * Symfony app. However, it's been modified to not rely on the Framework Bundle,
 * which spares us from unnecessary dependencies such as the routing layer.
 *
 * ORCA does something similar.
 *
 * @see https://github.com/TravisCarden/stackoverflow-a-50356503
 */

namespace Acquia\Cli;

use Acquia\Cli\Command\Api\ApiCommandHelper;
use Acquia\Cli\Helpers\LocalMachineHelper;
use Symfony\Component\Console\Application;
use Symfony\Component\Console\Input\ArgvInput;
use Symfony\Component\Dotenv\Dotenv;
use Symfony\Component\ErrorHandler\Debug;
use Symfony\Component\Filesystem\Filesystem;
use Webmozart\PathUtil\Path;

if (!in_array(PHP_SAPI, ['cli', 'phpdbg', 'embed'], true)) {
  echo 'Warning: The console should be invoked via the CLI version of PHP, not the '.PHP_SAPI.' SAPI'.PHP_EOL;
}

set_time_limit(0);

$loader = require dirname(__DIR__).'/vendor/autoload.php';
// We must pre-load this class to prevent self-update command from breaking.
// @see https://github.com/acquia/cli/issues/234
$loader->loadClass('Symfony\Component\Console\Event\ConsoleTerminateEvent');

$input = new ArgvInput();
if (null !== $env = $input->getParameterOption(['--env', '-e'], null, true)) {
  putenv('APP_ENV='.$_SERVER['APP_ENV'] = $_ENV['APP_ENV'] = $env);
}

if ($input->hasParameterOption('--no-debug', true)) {
  putenv('APP_DEBUG='.$_SERVER['APP_DEBUG'] = $_ENV['APP_DEBUG'] = '0');
}

(new Dotenv())->bootEnv(dirname(__DIR__).'/.env');

if ($_SERVER['APP_DEBUG']) {
  umask(0000);

  if (class_exists(Debug::class)) {
    Debug::enable();
  }
}

// On some environments (looking at you, Windows), HOME may not be set.
if (!getenv('HOME')) {
    putenv('HOME=' . LocalMachineHelper::getHomeDir());
}

$kernel = new Kernel($_SERVER['APP_ENV'], (bool) $_SERVER['APP_DEBUG']);

// Handle a clear-kernel-cache pseudo command. This isn't implemented as a true console
// command because a stale or corrupted cache would render it unusable--
// precisely when it is needed.
if (in_array($input->getFirstArgument(), ['clear-kernel-cache', 'ckc'])) {
  $filesystem = new Filesystem();
  $kernel_cache_dir = $kernel->getCacheDir();
  $filesystem->remove([$kernel_cache_dir]);
  $filesystem->mkdir($kernel_cache_dir);
  $filesystem->touch("{$kernel_cache_dir}/.gitkeep");
  exit;
}

$kernel->boot();
$container = $kernel->getContainer();
putenv("ACLI_REPO_ROOT=" . LocalMachineHelper::getProjectRoot());
/** @var Application $application */
$application = $container->get(Application::class);
$application->setName('Acquia CLI');
$application->setVersion('@package_version@');
/** @var \Acquia\Cli\Command\Api\ApiCommandHelper $helper */
$helper = $container->get(ApiCommandHelper::class);
$application->addCommands($helper->getApiCommands());
$application->run();
