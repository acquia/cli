{
    "name": "acquia/cli",
    "description": "Acquia CLI",
    "type": "library",
    "license": "GPL-2.0-only",
    "authors": [
        {
            "name": "Matthew Grasmick",
            "email": "matthew.grasmick@acquia.com"
        }
    ],
    "minimum-stability": "dev",
    "require": {
        "php": "^7.3 | ^8.0",
        "ext-json": "*",
        "acquia/drupal-environment-detector": "^1.2.0",
        "composer/semver": "^3.2",
        "consolidation/self-update": "2.0.0-alpha1 as 1.1",
        "cweagans/composer-patches": "^1.7",
        "kevinrob/guzzle-cache-middleware": "^3.3",
        "loophp/phposinfo": "^1.7.2",
        "psr/log": "^1.1",
        "ramsey/uuid": "^4.1",
        "react/event-loop": "^1.1",
        "symfony/cache": "^5.1",
        "symfony/config": "^5.1",
        "symfony/console": "^5.2.7",
        "symfony/dependency-injection": "^5.1",
        "symfony/dotenv": "^5.1",
        "symfony/event-dispatcher": "^5.1",
        "symfony/expression-language": "^5.1",
        "symfony/filesystem": "^5.1@dev",
        "symfony/finder": "^5.1",
        "symfony/flex": "^1.7",
        "symfony/http-kernel": "^5.1",
        "symfony/process": "^5.1",
        "symfony/validator": "^5.1",
        "symfony/yaml": "^5.1@dev",
        "typhonius/acquia-logstream": "^0.0.8",
        "typhonius/acquia-php-sdk-v2": "^2.0.17",
        "violuke/rsa-ssh-key-fingerprint": "^1.1",
        "webmozart/json": "^1.2",
        "webmozart/key-value-store": "^1.0",
        "zumba/amplitude-php": "^1.0"
    },
    "require-dev": {
        "acquia/coding-standards": "*",
        "dealerdirect/phpcodesniffer-composer-installer": "^0.7.0",
        "php-coveralls/php-coveralls": "^2.2",
        "phpro/grumphp": "^1.2",
        "phpspec/prophecy": "^1.10",
        "phpstan/extension-installer": "^1.1",
        "phpstan/phpstan": "^0.12.99",
        "phpstan/phpstan-deprecation-rules": "^0.12.6",
        "phpunit/phpunit": "^9.1",
        "squizlabs/php_codesniffer": "^3.5",
        "webmozart/path-util": "^2.3"
    },
    "autoload": {
        "psr-4": {
            "Acquia\\Cli\\": "src/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "Acquia\\Cli\\Tests\\": "tests/phpunit/src/"
        }
    },
    "bin": [
        "bin/acli"
    ],
    "config": {
        "platform": {
            "php": "7.3"
        },
        "process-timeout": 3600,
        "optimize-autoloader": true,
        "preferred-install": "dist",
        "sort-packages": true
    },
    "extra": {
        "branch-alias": {
            "dev-master": "1.x-dev"
        },
        "patches": {
            "symfony/filesystem": [
                "symfony-fs-mirror.patch"
            ]
        },
        "patchLevel": {
            "symfony/filesystem": "-p5"
        },
        "violinist": {
            "allow_updates_beyond_constraint": 1,
            "assignees": [],
            "blacklist": [],
            "bundled_packages": [],
            "default_branch": "master",
            "number_of_concurrent_updates": 1,
            "one_pull_request_per_package": 0,
            "security_updates_only": 0,
            "timeframe_disallowed": "0",
            "timezone": "+0000",
            "update_dev_dependencies": 1,
            "update_with_dependencies": 1
        }
    },
    "prefer-stable": true,
    "scripts": {
        "update-cloud-api-spec": [
            "rm -rf cx-api-spec",
            "git clone git@github.com:acquia/cx-api-spec.git",
            "npm install -g npm@6.6",
            "[ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\" && cd cx-api-spec && nvm install && nvm use && npm install && make install && make spec",
            "cp cx-api-spec/dist/spec/acquia-spec.yaml assets/",
            "rm -rf cx-api-spec"
        ],
        "box-install": [
            "curl -f -L https://github.com/box-project/box/releases/download/3.11.1/box.phar -o build/box.phar"
        ],
        "box-compile": [
            "php build/box.phar compile"
        ],
        "cs": "phpcs",
        "cbf": "phpcbf",
        "unit": "phpunit tests/phpunit -vvv",
        "lint": [
            "find src -name '*.php' -print0 | xargs -0 -n1 php -l",
            "find tests -name '*.php' -print0 | xargs -0 -n1 php -l"
        ],
        "test": [
            "@lint",
            "@cs",
            "@stan",
            "@unit"
        ],
        "stan": [
            "phpstan analyze"
        ],
        "coveralls": [
            "php-coveralls -vvv"
        ]
    }
}
