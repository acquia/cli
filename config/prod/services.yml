---
parameters:
  env(ACLI_REPO_ROOT): "%kernel.project_dir%"
  app.data_dir: "%env(HOME)%/.acquia"
  app.project_dir: "%env(ACLI_REPO_ROOT)%"
  app.ssh_dir: "%env(HOME)%/.ssh"
  app.acli_config_filename: '.acquia-cli.yml'
  app.cloud_config_filename: 'cloud_api.conf'
  app.acli_config_filepath: "%app.project_dir%/%app.acli_config_filename%"
  app.cloud_config_filepath: "%app.data_dir%/%app.cloud_config_filename%"

services:
  _defaults:
    autoconfigure: true
    autowire: true
    bind:
      $cloudConfigFilepath: '%app.cloud_config_filepath%'
      $acliConfigFilepath: '%app.acli_config_filepath%'
      # This should be root directory of the repository where acli is being invoked (not the root of acli itself).
      $projectDir: "%app.project_dir%"
      $sshDir: "%app.ssh_dir%"
      $amplitudeKey: '%env(AMPLITUDE_KEY)%'
      $bugSnagKey: '%env(BUGSNAG_KEY)%'
    public: true

  # Register nearly all Acquia CLI classes as services.
  Acquia\Cli\:
    exclude:
      - ../../src/Kernel.php
      - ../../src/DataStore/Datastore.php
      - ../../src/DataStore/YamlStore.php
      - ../../src/DataStore/JsonDataStore.php
      - ../../src/CloudApi/AccessTokenConnector.php
    public: true
    resource: ../../src

  Acquia\Cli\Config\AcquiaCliConfig: ~
  Acquia\Cli\Config\CloudDataConfig: ~

  Acquia\Cli\DataStore\AcquiaCliDatastore: ~
  Acquia\Cli\DataStore\CloudDataStore: ~

  # All commands inherit from a common base and use the same DI parameters.
  Acquia\Cli\Command\:
    resource: ../../src/Command
    parent: Acquia\Cli\Command\CommandBase
    exclude:
      - ../../src/Command/CommandBase.php
      - ../../src/Command/Acsf/AcsfCommandBase.php
      - ../../src/Command/Acsf/AcsfListCommand.php
      - ../../src/Command/Acsf/AcsfListCommandBase.php
      - ../../src/Command/Acsf/AcsfApiBaseCommand.php
      - ../../src/Command/Api/ApiBaseCommand.php
      - ../../src/Command/Api/ApiListCommand.php
      - ../../src/Command/Api/ApiListCommandBase.php
  Acquia\Cli\Command\CommandBase:
    abstract: true

  Acquia\Cli\EventListener\ExceptionListener:
    tags:
      # @see Symfony\Component\Console\ConsoleEvents
      - { name: kernel.event_listener, event: console.error, method: onConsoleError}

  Acquia\Cli\EventListener\ComposerScriptsListener:
    tags:
      # @see Symfony\Component\Console\ConsoleEvents
      - { name: kernel.event_listener, event: console.terminate, method: onConsoleTerminate}
      - { name: kernel.event_listener, event: console.command, method: onConsoleCommand}

  Acquia\Cli\ApiCredentialsInterface:
    alias: Acquia\Cli\CloudApi\CloudCredentials

  cloud.credentials:
    class: Acquia\Cli\CloudApi\CloudCredentials

  acsf.credentials:
    class: Acquia\Cli\AcsfApi\AcsfCredentials

  # AcquiaCloudApi services.
  Acquia\Cli\Command\Api\ApiCommandFactory: ~
  Acquia\Cli\Command\Api\ApiBaseCommand:
    class: Acquia\Cli\Command\Api\ApiBaseCommand
    factory: ['@Acquia\Cli\Command\Api\ApiCommandFactory', 'createCommand']
  Acquia\Cli\Command\Api\ApiListCommandBase:
    class: Acquia\Cli\Command\Api\ApiListCommandBase
    factory: [ '@Acquia\Cli\Command\Api\ApiCommandFactory', 'createListCommand' ]
  AcquiaCloudApi\Connector\Client: ~
  Acquia\Cli\ClientServiceInterface:
      alias: Acquia\Cli\CloudApi\ClientService
  Acquia\Cli\ConnectorFactoryInterface:
    alias: Acquia\Cli\CloudApi\ConnectorFactory
  Acquia\Cli\CloudApi\ConnectorFactory:
    arguments:
      $config:
        # @see https://symfony.com/doc/current/service_container/expression_language.html
        key: '@=service("cloud.credentials").getCloudKey()'
        secret: '@=service("cloud.credentials").getCloudSecret()'
        accessToken: '@=service("cloud.credentials").getCloudAccessToken()'
        accessTokenExpiry: '@=service("cloud.credentials").getCloudAccessTokenExpiry()'
      $base_uri: '@=service("cloud.credentials").getBaseUri()'
      $accounts_uri: '@=service("cloud.credentials").getAccountsUri()'
  AcquiaCloudApi\Connector\ConnectorInterface:
    alias: Acquia\Cli\CloudApi\ConnectorFactory
  AcquiaCloudApi\Connector\Connector:
    alias: Acquia\Cli\CloudApi\ConnectorFactory
  AcquiaLogstream\LogstreamManager: ~

  # Acquia Cloud Site Factory Services.
  Acquia\Cli\AcsfApi\AcsfConnectorFactory:
    arguments:
      $config:
        # @see https://symfony.com/doc/current/service_container/expression_language.html
        key: '@=service("acsf.credentials").getCloudKey()'
        secret: '@=service("acsf.credentials").getCloudSecret()'
      $baseUri: '@=service("acsf.credentials").getBaseUri()'
  Acquia\Cli\AcsfApi\AcsfConnector:
    alias: Acquia\Cli\AcsfApi\AcsfConnectorFactory
  Acquia\Cli\Command\Acsf\AcsfCommandFactory: ~
  Acquia\Cli\Command\Acsf\AcsfApiBaseCommand:
    class: Acquia\Cli\Command\Acsf\AcsfApiBaseCommand
    factory: ['@Acquia\Cli\Command\Acsf\AcsfCommandFactory', 'createCommand']
  Acquia\Cli\Command\Acsf\AcsfListCommandBase:
    class: Acquia\Cli\Command\Acsf\AcsfListCommandBase
    factory: [ '@Acquia\Cli\Command\Acsf\AcsfCommandFactory', 'createListCommand' ]
  Acquia\Cli\Command\Acsf\AcsfApiAuthLoginCommand:
    arguments:
      Acquia\Cli\ApiCredentialsInterface: '@acsf.credentials'
  Acquia\Cli\Command\Acsf\AcsfApiAuthLogoutCommand:
    arguments:
      Acquia\Cli\ApiCredentialsInterface: '@acsf.credentials'

  # Symfony services.
  Acquia\Cli\Application: ~
  Symfony\Component\Console\Input\ArgvInput: ~
  Symfony\Component\Console\Input\InputInterface:
    alias: Symfony\Component\Console\Input\ArgvInput
  Symfony\Component\Console\Output\ConsoleOutput: ~
  Symfony\Component\Console\Output\OutputInterface:
    alias: Symfony\Component\Console\Output\ConsoleOutput
  Symfony\Component\EventDispatcher\EventDispatcher: ~
  Symfony\Component\Console\Logger\ConsoleLogger: ~
  Psr\Log\LoggerInterface:
    alias: Symfony\Component\Console\Logger\ConsoleLogger

  # Amplitude service.
  Zumba\Amplitude\Amplitude: ~

  # Guzzle service.
  GuzzleHttp\Client: ~
