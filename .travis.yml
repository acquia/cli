language: php
os: linux
version: ~> 1.0
php:
  - 7.3
  - 7.4
  - 8.0.0

cache:
  directories:
    - "$HOME/.composer/cache"
    - "$HOME/AppData/Local/Temp/chocolatey"
    - "$HOME/AppData/Local/Composer"

services:
  - mysql

env:
  global: ACLI_PRINT_COMMAND_OUTPUT=1

jobs:
  # We have to explicitly add Windows jobs because Travis CI doesn't support PHP on Windows.
  include:
    - os: windows
      language: shell
      git:
        autocrlf: false
      before_install:
        - choco install php --version=7.4.13
        - sed -i 's/memory_limit = .*/memory_limit = 512M/' /c/tools/php74/php.ini
        - choco install composer
        # Fix curl errors in coveralls.
        - curl -o /c/tools/php74/extras/ssl/cacert.pem https://curl.haxx.se/ca/cacert.pem
        - echo 'curl.cainfo = "C:\tools\php74\extras\ssl\cacert.pem"' >> /c/tools/php74/php.ini
        # Refresh env to pick up new paths added by Choco installs.
        - cmd.exe //c "RefreshEnv.cmd"
        # Emulate RefreshEnv to pick up new bin paths in Git Bash (the native Travis CI shell).
        - eval $(powershell -NonInteractive -Command 'write("export PATH=`"" + ([Environment]::GetEnvironmentVariable("PATH","Machine") + ";" + [Environment]::GetEnvironmentVariable("PATH","User")).replace("\","/").replace("C:","/c").replace(";",":") + ":`$PATH`"")')
        - composer self-update --preview
    - stage: "Build packages for CLI"
      if: tag IS present
      install: composer install --no-dev --optimize-autoloader && composer box-install
      before_script:
        # Generate .env.local.php
        - composer dump-env prod
        # Warm the symfony cache so it gets bundled with phar.
        - ./bin/acli
      script: composer box-compile
      deploy:
        provider: releases
        api_key:
          secure: iKpG9x/P8xhJtlo/Dr43mg9sB0/5Gl7AuTwbRokV/OTYIo+BHRZNLQQeUbX/ZzemJC9Y9b2PFOkBOcq7y8uf0ZbXR0+MEbdYh+UZiMt1f+/cQqRU1WMlq/+1TMETWwxHFML9MB2aATK+qqt40RIF19Pog3s4b07oXdcpD1rzRnaovmDKsJA7bby+R8CXUqgdt2hYwk8S4J5p9rkOj8isYeJEnrxsfk2dcVey8NHBeHots3W3DPPOzav16+XeqnofbAOHOncsUcWbjxLFpFWJdvrd5M9paFo0jcn8PaFVqsfBaJqs3MFJ/tU/nLv5fEO7r3inmUIZnbOK+nybi355KD+kX/tHwttSRbssp0nrmC22NeUk0jAnyFgKuf4K2mGVCXtDqFz5jfjxZIMdajxIGexaX/zJyd78KuIIfe7vOygHgSzgVHJ98/JfgK/l29rBdvZhDeRKU1wE1l3mhBIuF4YCwmvpDcB9fL4GKbJMru4gL3wMj1c9f07Cb9sJq1l1PUO70RAIhxMKc+Ps5jOtjcxS3JiF1e0Evqcdzldxnev/erLRZRlnztqjdUVyVh+t3bUROUxCtGUZlsxFSRwxfkXtoNoeFc+JS5YqYQjgbsxB7vj8X7cRbiJT1y7eewP/KOAJMaqRWWevgabB1bozcTscB6AGQbwZLBKH+w+A26k=
        file: build/acli.phar
        skip_cleanup: true
        on:
          tags: true

before_install:
  # Tests for the SSH key commands rely on ssh-agent running.
  - eval "$(ssh-agent -s)"
  - echo " xdebug.mode=coverage" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini
  - composer self-update --preview

install:
  # Load composer dependencies.
  - composer validate --no-check-all --ansi
  - composer install --prefer-dist --no-interaction --optimize-autoloader

script:
  - composer test
  # Run coveralls here instead of after_success because it should break the build if it fails to report.
  # Only run once per build so Coveralls doesn't get confused.
  - if [ $TRAVIS_TEST_RESULT -eq 0 ] && [ "$TRAVIS_OS_NAME" = "linux" ] && [ "$TRAVIS_PHP_VERSION" = "7.4" ]; then composer coveralls; fi
